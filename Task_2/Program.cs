// Упорядочить данных в массиве
// Алгоритм сортировки методом выбора (минимакса)

// 6 8 3 2 1 4 5 7 
// задача выбрать первый элемент, найти минимальный и поменять их
// 1 8 3 2 6 4 5 7 
// единица сортирована, берем мин и меняем с рабочим (вторым)
// 1 2 3 8 6 4 5 7
// и т. д. до 1 2 3 4 5 6 7 8 пока весь массив не будет отсортирован

// Действия:
// 1. Найти позицию минимального элемента в неотсортированной части массива
// 2. Произвести обмен этого значения со значением первой неотсортированной позици
// 3. Повторять, пока есть неотсортированные элементы

int[] arr = { 1, 5, 4, 3, 2, 6, 7, 1, 1 };
void PrintArray(int[] array) // первый метод, аргумент - массив
{
    int count = array.Length; // получение количества элементов
    for (int i = 0; i < count; i++)
    {
        Console.Write($"{array[i]} "); // проходим по всем элементам и показываем на экране
    }
    Console.WriteLine(); // пустая строка

}
PrintArray(arr);

void SelectionSort(int[] array) // метод, в котором будет сортировка
{
    for (int i = 0; i < array.Length; i++) // array.length - длина массива
    {
        int minPosition = i; // определяем позицию элемента, над которым будет производить действия
        
        for (int j = i+1; j < array.Length - 1; j++) //array.Length -1 до последнего элемента/ i+1 даст общее кол-во элементов
         {
            if(array[j] < array[minPosition]) minPosition = j; // ищем мин элемент и сохраняем его в minPosition

        }
        int temporary = array[i];       //меняем значение позиции с той позицией, которую мы нашли
        array[i] = array[minPosition];  // в i-ую позицию кладем тот элемент, который был найден
        array[minPosition] = temporary; // в мин позицию кладем временный элемент

    }

}
 PrintArray(arr);
 SelectionSort(arr);

 PrintArray(arr);
